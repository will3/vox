#pragma kernel CSMain

struct GenTerrianNoise {
    float height;
    float rockColor;
    float grass;
};

StructuredBuffer<float> _HeightBuffer;
StructuredBuffer<float> _RockColorBuffer;
StructuredBuffer<float> _GrassBuffer;

RWStructuredBuffer<GenTerrianNoise> _NoiseBuffer;

int _DataSize;

int getIndex(int x, int y, int z) {
    int dataSize = _DataSize;
    return x * dataSize * dataSize + y * dataSize + z;
}

[numthreads(8,8,8)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int dataSize = _DataSize;
    if (id.x >= dataSize || id.y >= dataSize || id.z >= dataSize) {
        return;
    }
    
    int index = getIndex(id.x, id.y, id.z);
    
    GenTerrianNoise t;

    t.height = _HeightBuffer[index];
    t.rockColor = _RockColorBuffer[index];
    t.grass = _GrassBuffer[index];
    
    _NoiseBuffer[index] = t;
}